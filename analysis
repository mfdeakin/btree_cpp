Adding Function: We need to go to the deepest level of the tree first. We do that by comparing the record we want to insert to the records in the tree. If the tree has any children, we go to the one that is under the record that is greater than the record we want to insert. Otherwise, we need to check for the node splitting. This will happen if the node is already full. We insert the record as normal, and then push the center record up, and create another node, moving the records greater than the center into the new node.

Printing Function: This is a simple recursive traversal function which prints the tree in preorder. This is easy enough to check because the output should be sorted. This will also take a recursive function which simply goes down every node, reads in the next child node if it exists, and goes executes itself on the child node. Then it prints out the record it is pointing at, and then reads in the next child node. This repeats until it has printed out alll of the records and traversed all of the child nodes.

Height determination: A B-Tree is always balanced, so this is a relatively simple process of traversing down a path until a leaf is reached, counting each node passed.